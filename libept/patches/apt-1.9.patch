diff -Naur orig/ept/apt/apt.cc patched/ept/apt/apt.cc
--- orig/ept/apt/apt.cc	2015-11-28 21:04:48.000000000 +0100
+++ patched/ept/apt/apt.cc	2019-06-17 17:53:22.000000000 +0200
@@ -23,10 +23,12 @@
 #include "apt.h"
 #include "ept/utils/sys.h"
 #include <apt-pkg/error.h>
+#include <apt-pkg/fileutl.h>
 #include <apt-pkg/init.h>
 #include <apt-pkg/progress.h>
 #include <apt-pkg/sourcelist.h>
 #include <apt-pkg/pkgcachegen.h>
+#include <apt-pkg/pkgsystem.h>
 #include <apt-pkg/policy.h>
 #include <apt-pkg/cachefile.h>
 #include <vector>
@@ -112,7 +114,7 @@
 		if (!m_list->ReadMainList())
 			throw Exception("reading list of sources");
 
-		bool res = pkgMakeStatusCache(*m_list, progress, &m, true);
+		bool res = pkgCacheGenerator::MakeStatusCache(*m_list, &progress, &m, true);
 		progress.Done();
 		if (!res)
 			throw Exception("Reading the package lists or status file");
@@ -147,7 +149,7 @@
 		if (!m_depcache)
 		{
 			m_depcache = new pkgCacheFile;
-			if (!m_depcache->Open(progress, false))
+			if (!m_depcache->Open(&progress, false))
 				throw Exception("Opening the cache file");
 		}
 		return *m_depcache;
@@ -261,8 +263,6 @@
 		{
 			//cerr << "Needs open/reopen" << endl;
 			lastFile = pkgCache::PkgFileIterator(apt.cache(), vflist[idx]->File + apt.cache().PkgFileP);
-			if (!lastFile.IsOk())
-				throw Exception(string("Reading the data record for a package from file ") + lastFile.FileName());
 			//cerr << "Ok for " << lastFile.FileName() << endl;
 			if (file.IsOpen())
 				file.Close();
@@ -606,9 +606,6 @@
 
 			// Check and load the package list file
 			pkgCache::PkgFileIterator pfi = vfi.File();
-			if (!pfi.IsOk())
-				throw Exception(string("Reading the data record for a package version from file ") + pfi.FileName());
-
 			FileFd pkgf(pfi.FileName(), FileFd::ReadOnly);
 			if (_error->PendingError() == true)
 				return std::string();
diff -Naur orig/ept/apt/apt-test.cc patched/ept/apt/apt-test.cc
--- orig/ept/apt/apt-test.cc	2015-11-28 21:04:48.000000000 +0100
+++ patched/ept/apt/apt-test.cc	2019-06-17 17:55:14.000000000 +0200
@@ -1,5 +1,7 @@
 #include "ept/test.h"
 #include "apt.h"
+
+#include <apt-pkg/pkgsystem.h>
 #include <set>
 #include <algorithm>
 
diff -Naur orig/ept/progresscallback.h patched/ept/progresscallback.h
--- orig/ept/progresscallback.h	2015-11-28 21:04:48.000000000 +0100
+++ patched/ept/progresscallback.h	2019-06-17 17:54:04.000000000 +0200
@@ -6,6 +6,7 @@
 #ifndef EPT_PROGRESSCALLBACK_H
 #define EPT_PROGRESSCALLBACK_H
 
+#include <string>
 #include <apt-pkg/acquire.h>
 
 namespace ept {
@@ -17,7 +18,7 @@
 public:
     ProgressCallback() {};
     virtual ~ProgressCallback() {};
-    virtual bool MediaChange( string, string ) { return false; } // bah
+    virtual bool MediaChange(std::string, std::string ) { return false; } // bah
 
     // override this to get periodic updates
     virtual void UpdatePulse( double, double, unsigned long ) {}
