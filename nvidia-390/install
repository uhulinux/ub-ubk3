#!/bin/bash -eux

function alprogi {
	cd $1
    export PREFIX=/usr
    ub_install
    gunzip	$mandir/nvidia-$1.1.gz
    cd ..
}

#célkönyvtárak
cellibdir="$UB_INSTALLDIR"/usr/lib
celbindir="$UB_INSTALLDIR"/usr/bin
sharedir="$UB_INSTALLDIR"/usr/share
etcdir="$UB_INSTALLDIR"/etc
moduldir="$UB_INSTALLDIR"/lib/modules/"$(ls -1 /lib/modules | grep x86_64)"/kernel/drivers/video
xmoduldir="$cellibdir"/xorg/modules
desktopdir="$sharedir"/applications
mandir="$sharedir"/man/man1
openclvendordir="$UB_INSTALLDIR"/etc/OpenCL/vendors
pixmapdir="$sharedir"/pixmaps/
egldir="$sharedir"/egl/egl_external_platform.d
vulcandir="$etcdir"/vulcan/icd.d
xconfdir="$sharedir"/X11/x.org.conf.d
glvnddir="$sharedir"/glvnd/egl_vendor.d
vdpaudir=$cellibdir/vdpau
profilesdir=$sharedir/nvidia

#könyvtárgyártás
mkdir -p "$cellibdir"/nvidia \
	"$moduldir" \
	"$xmoduldir"/{drivers,extensions} \
	"$desktopdir" \
	"$mandir" \
	"$openclvendordir" \
	"$pixmapdir" \
	"$egldir" \
	"$vulcandir" \
	"$xconfdir" \
	"$glvnddir" \
	"$vdpaudir" \
    "$profilesdir"

export NV_USE_BUNDLED_LIBJANSSON=0
alprogi settings
alprogi xconfig
alprogi modprobe
alprogi persistenced

# desktop
mv	settings/doc/nvidia-settings.desktop "$desktopdir"/
mv	settings/doc/nvidia-settings.png "$pixmapdir"/

# felesleges gtk libek
rm libnvidia-gtk*

#kernelmodulok
cp kernel/*.ko "$moduldir"/

# binárisok elhelyezése
binaries="nvidia-cuda-mps-control nvidia-smi"
for binari in $binaries;do
    mv $binari $celbindir/
    gunzip ${binari}.1.gz
    mv $binari.1 $mandir/
done
mv nvidia-cuda-mps-server $celbindir/

# openclvendor
mv	nvidia.icd "$openclvendordir"/

# wrapped-software-rendering lib. Postinstből lehet majd rá libcwfb.so link, ha
# nem ütközik az x.org-server által szállítottal libcwfb.so fájllal
# mv libnvidia-wfb.so.${UB_VERSION} $xmoduldir

# Áthelyezzük a nem a $cellibdir alá kerülő *.so-kat a "$cellibdir"/nvidia/ alá

# postinstből majd libglx.so nevű link lesz rá a $cellibdir/xorg/extensions alá
mv	libglx.so."$UB_VERSION" "$cellibdir"/nvidia/

# wrapped-software-rendering lib. Postinstből lehet majd rá libcwfb.so link, ha
# nem ütközik az x.org-server által szállítottal libcwfb.so fájllal
mv libnvidia-wfb.so.${UB_VERSION} $xmoduldir

# libglvnd ütközések, a libglvnd elsőbbséget élvez
mv	libEGL.so.1.1.0 "$cellibdir"/nvidia/
mv	libGLESv1_CM.so.1.2.0 "$cellibdir"/nvidia/
mv	libGLESv2.so.2.1.0 "$cellibdir"/nvidia/
mv	libGL.so.1.7.0 "$cellibdir"/nvidia/
mv	libGLX.so.0 "$cellibdir"/nvidia/
mv	libGLdispatch.so.0 "$cellibdir"/nvidia/
mv	libOpenGL.so.0 "$cellibdir"/nvidia/

# glvnd rendszer van, a legacy libGL.so.${UB_VERSION} átmozgatása
mv	libGL.so.${UB_VERSION} "$cellibdir"/nvidia/

# nvidia driver az x.org-server részére
mv	nvidia_drv.so "$xmoduldir"/drivers/

mv	tls "$cellibdir"

# vdpau cuccok
mv libvdpau_nvidia.so.${UB_VERSION} $vdpaudir

# minden maradék *.so áthelyezése a libekbe

mv *.so.* "$cellibdir"/

# Beállítő fájlok elhelyezése

# glvnd
mv 10_nvidia.json "$glvnddir"/

# wailand, vulcan
mv 10_nvidia_wayland.json $egldir/
mv nvidia_icd.json.template $vulcandir/nvidia_icd.json

# két videókártyás rendszereknek
mv nvidia-drm-outputclass.conf $xconfdir/10-nvidia-drm-outputclass.conf
mv persistenced/init/systemd/nvidia-persistenced.service.template \
    $UB_INSTALLDIR/usr/lib/systemd/system/nvidia-persistenced.service

# applications-profiles
mv nvidia-application-profiles-* $profilesdir/

## libxnvctrl csomag

cd settings/src/libXNVCtrl
mkdir -p "${UB_INSTALLDIR}"/usr/{include/NVCtrl,lib/pkgconfig}
cp nv_control.h NVCtrl{,Lib}.h "${UB_INSTALLDIR}"/usr/include/NVCtrl/
cp libXNVCtrl.a "${cellibdir}"/

# pc rendberakás
cat <<'EOF' > "${UB_INSTALLDIR}"/usr/lib/pkgconfig/libXNVCtrl.pc
prefix=/usr
libdir=${prefix}/lib
includedir=${prefix}/include/NVCtrl

Name: libXNVCtrl
Description: Library for accessing NV-CONTROL extension in NVIDIA's kurrent drivers.
Version: %version%
Libs: -L${libdir} -lXNVCtrl
Cflags: -I${includedir}
EOF

sed -i -e "s/%version%/$UB_VERSION/" "${UB_INSTALLDIR}"/usr/lib/pkgconfig/libXNVCtrl.pc

## linkgyártások

# általános
cd "$cellibdir"
for i in `ls -1 libnv*`;do
lib=$(echo $i | sed s/\.${UB_VERSION}//g)
solink=$(echo $lib | sed s/so\..*/so/)
ln -s $i $lib.1
ln -s $lib.1 $solink
done

# cuda
ln -s libcuda.so.${UB_VERSION} libcuda.so.1
ln -s libcuda.so.1 libcuda.so

# wayland
ln -s libnvidia-egl-wayland.so libnvidia-egl-wayland.so.1
ln -s libEGL_nvidia.so.${UB_VERSION} libEGL_nvidia.so.0

# vulkan
ln -s libGLX_nvidia.so.${UB_VERSION} libGLX_nvidia.so.0

# tls
ln -s libnvidia-tls.so.${UB_VERSION} tls/libnvidia-tls.so.1
ln -s libnvidia-tls.so.1 tls/libnvidia-tls.so

# vdpau
ln -s libvdpau_nvidia.so.${UB_VERSION} vdpau/libvdpau_nvidia.so.1
ln -s libvdpau_nvidia.so.1 vdpau/libvdpau_nvidia.so

# Támogatott chipkhez a verzió beillesztése a csomag leírásába
sed "s/version/${UB_VERSION}/g" -i ${UB_SRCDIR}/packages/nvidia-390/description/hu
