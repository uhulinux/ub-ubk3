diff -Nur orig/src/plugins/Input/ffmpeg/decoder_ffmpeg.cpp mod/src/plugins/Input/ffmpeg/decoder_ffmpeg.cpp
--- orig/src/plugins/Input/ffmpeg/decoder_ffmpeg.cpp	2021-05-23 11:23:34.000000000 +0200
+++ mod/src/plugins/Input/ffmpeg/decoder_ffmpeg.cpp	2021-05-09 10:07:19.000000000 +0200
@@ -1,5 +1,5 @@
 /***************************************************************************
- *   Copyright (C) 2006-2021 by Ilya Kotov                                 *
+ *   Copyright (C) 2006-2020 by Ilya Kotov                                 *
  *   forkotov02@ya.ru                                                      *
  *                                                                         *
  *   This program is free software; you can redistribute it and/or modify  *
@@ -35,12 +35,12 @@
     if(d->input()->atEnd())
         return AVERROR_EOF;
 #endif
-    return static_cast<int>(d->input()->read((char*)buf, size));
+    return (int)d->input()->read((char*)buf, size);
 }
 
 static int64_t ffmpeg_seek(void *data, int64_t offset, int whence)
 {
-    DecoderFFmpeg *d = static_cast<DecoderFFmpeg*>(data);
+    DecoderFFmpeg *d = (DecoderFFmpeg*)data;
     int64_t absolute_pos = 0;
     /*if(d->input()->isSequential())
         return -1;*/
@@ -66,10 +66,10 @@
 }
 
 // Decoder class
-DecoderFFmpeg::DecoderFFmpeg(const QString &path, QIODevice *i) : Decoder(i),
-    m_path(path)
-
+DecoderFFmpeg::DecoderFFmpeg(const QString &path, QIODevice *i)
+        : Decoder(i)
 {
+    m_path = path;
     m_pkt = av_packet_alloc();
 }
 
@@ -84,7 +84,11 @@
     av_packet_free(&m_pkt);
 
     if(m_stream)
+#if (LIBAVFORMAT_VERSION_INT >= AV_VERSION_INT(57, 80, 100)) //ffmpeg-3.4
         avio_context_free(&m_stream);
+#else
+        av_free(m_stream);
+#endif
 
     if(m_frame)
         av_frame_free(&m_frame);
@@ -410,9 +414,9 @@
 
         if((m_eof || send_error < 0) && recv_error < 0)
         {
+            char errbuf[AV_ERROR_MAX_STRING_SIZE] = { 0 };
             if(!m_eof)
             {
-                char errbuf[AV_ERROR_MAX_STRING_SIZE] = { 0 };
                 av_strerror(send_error, errbuf, sizeof(errbuf));
                 qWarning("DecoderFFmpeg: avcodec_send_packet error: %s", errbuf);
                 av_strerror(recv_error, errbuf, sizeof(errbuf));
diff -Nur orig/src/plugins/Input/ffmpeg/decoder_ffmpeg.h mod/src/plugins/Input/ffmpeg/decoder_ffmpeg.h
--- orig/src/plugins/Input/ffmpeg/decoder_ffmpeg.h	2021-05-23 11:23:34.000000000 +0200
+++ mod/src/plugins/Input/ffmpeg/decoder_ffmpeg.h	2021-05-09 10:07:19.000000000 +0200
@@ -1,5 +1,5 @@
 /***************************************************************************
- *   Copyright (C) 2006-2021 by Ilya Kotov                                 *
+ *   Copyright (C) 2006-2020 by Ilya Kotov                                 *
  *   forkotov02@ya.ru                                                      *
  *                                                                         *
  *   This program is free software; you can redistribute it and/or modify  *
@@ -36,7 +36,7 @@
 class DecoderFFmpeg : public Decoder
 {
 public:
-    explicit DecoderFFmpeg(const QString &, QIODevice *i);
+    DecoderFFmpeg(const QString &, QIODevice *i);
     virtual ~DecoderFFmpeg();
 
     // Standard Decoder API
diff -Nur orig/src/plugins/Input/mpeg/decoder_mad.cpp mod/src/plugins/Input/mpeg/decoder_mad.cpp
--- orig/src/plugins/Input/mpeg/decoder_mad.cpp	2021-05-23 11:23:34.000000000 +0200
+++ mod/src/plugins/Input/mpeg/decoder_mad.cpp	2021-05-09 10:07:19.000000000 +0200
@@ -3,7 +3,7 @@
  *                                                                         *
  * Copyright (c) 2000-2001 Brad Hughes <bhughes@trolltech.com>             *
  * Copyright (C) 2000-2004 Robert Leslie <rob@mars.org>                    *
- * Copyright (C) 2009-2020 Ilya Kotov forkotov02@ya.ru                     *
+ * Copyright (C) 2009-2018 Ilya Kotov forkotov02@ya.ru                     *
  *                                                                         *
  *   This program is free software; you can redistribute it and/or modify  *
  *   it under the terms of the GNU General Public License as published by  *
@@ -33,8 +33,21 @@
 #define LAME_MAGIC (('L' << 24) | ('A' << 16) | ('M' << 8) | 'E')
 #define INPUT_BUFFER_SIZE (32*1024)
 
-DecoderMAD::DecoderMAD(bool crc, QIODevice *i) : Decoder(i), m_crc(crc)
-{}
+DecoderMAD::DecoderMAD(QIODevice *i) : Decoder(i)
+{
+    m_inited = false;
+    m_totalTime = 0;
+    m_channels = 0;
+    m_bitrate = 0;
+    m_freq = 0;
+    m_len = 0;
+    m_input_buf = nullptr;
+    m_input_bytes = 0;
+    m_skip_frames = 0;
+    m_eof = false;
+    m_skip_bytes = 0;
+    m_play_bytes = -1;
+}
 
 DecoderMAD::~DecoderMAD()
 {
@@ -74,8 +87,7 @@
     }
 
     mad_stream_init(&m_stream);
-    if(!m_crc)
-        mad_stream_options(&m_stream, MAD_OPTION_IGNORECRC);
+    mad_stream_options(&m_stream, MAD_OPTION_IGNORECRC);
     mad_frame_init(&m_frame);
     mad_synth_init(&m_synth);
 
diff -Nur orig/src/plugins/Input/mpeg/decoder_mad.h mod/src/plugins/Input/mpeg/decoder_mad.h
--- orig/src/plugins/Input/mpeg/decoder_mad.h	2021-05-23 11:23:34.000000000 +0200
+++ mod/src/plugins/Input/mpeg/decoder_mad.h	2021-05-09 10:07:19.000000000 +0200
@@ -3,7 +3,7 @@
  *                                                                         *
  * Copyright (c) 2000-2001 Brad Hughes <bhughes@trolltech.com>             *
  * Copyright (C) 2000-2004 Robert Leslie <rob@mars.org>                    *
- * Copyright (C) 2009-2020 Ilya Kotov forkotov02@ya.ru                     *
+ * Copyright (C) 2009-2018 Ilya Kotov forkotov02@ya.ru                     *
  *                                                                         *
  *   This program is free software; you can redistribute it and/or modify  *
  *   it under the terms of the GNU General Public License as published by  *
@@ -31,7 +31,7 @@
 class DecoderMAD : public Decoder
 {
 public:
-    explicit DecoderMAD(bool crc, QIODevice *i);
+    DecoderMAD(QIODevice *i);
     virtual ~DecoderMAD();
 
     // standard decoder API
@@ -52,16 +52,45 @@
         unsigned short end_padding;
         qint8 gain;
     };
+    // helper functions
+    bool decodeFrame();
+    qint64 madOutputFloat(float *data, qint64 samples);
+    bool fillBuffer();
+    void deinit();
+    bool findHeader();
+    bool findXingHeader(struct mad_bitptr, unsigned int bitlen);
+    LameHeader *findLameHeader(struct mad_bitptr ptr, unsigned int bitlen);
+    uint findID3v2(uchar *data, ulong size);
+    bool m_inited, m_eof;
+    qint64 m_totalTime;
+    int m_channels, m_skip_frames;
+    uint m_bitrate;
+    long m_freq, m_len;
+
+    // file input buffer
+    char *m_input_buf;
+    qint64 m_input_bytes;
+
+    // MAD decoder
 
     //xing header
     struct XingHeader
     {
-        int flags = 0;
-        unsigned long frames = 0;
-        unsigned long bytes = 0;
-        unsigned char toc[100] = { 0 };
-        long scale = 0;
-        LameHeader *lame = nullptr;
+        int flags;
+        unsigned long frames;
+        unsigned long bytes;
+        unsigned char toc[100];
+        long scale;
+        LameHeader *lame;
+
+        XingHeader()
+        {
+            flags = 0;
+            frames = 0;
+            bytes = 0;
+            scale = 0;
+            lame = nullptr;
+        }
     };
     XingHeader m_xing;
 
@@ -73,32 +102,11 @@
         XING_SCALE  = 0x0008
     };
 
-    // helper functions
-    bool decodeFrame();
-    qint64 madOutputFloat(float *data, qint64 samples);
-    bool fillBuffer();
-    void deinit();
-    bool findHeader();
-    bool findXingHeader(struct mad_bitptr, unsigned int bitlen);
-    LameHeader *findLameHeader(struct mad_bitptr ptr, unsigned int bitlen);
-    uint findID3v2(uchar *data, ulong size);
-
-    bool m_inited = false, m_eof = false;
-    qint64 m_totalTime = 0;
-    int m_channels = 0, m_skip_frames = 0;
-    uint m_bitrate = 0;
-    long m_freq = 0, m_len = 0;
-
-    // file input buffer
-    char *m_input_buf = nullptr;
-    qint64 m_input_bytes = 0;
-
-    // MAD decoder
     struct mad_stream m_stream;
     struct mad_frame m_frame;
     struct mad_synth m_synth;
-    qint64 m_skip_bytes = 0, m_play_bytes = -1;
-    bool m_crc;
+    qint64 m_skip_bytes, m_play_bytes;
+
 };
 
 
