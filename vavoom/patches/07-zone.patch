diff -Nur orig/libs/core/zone.cpp mod/libs/core/zone.cpp
--- orig/libs/core/zone.cpp	2022-08-12 08:52:23.000000000 +0200
+++ mod/libs/core/zone.cpp	2022-08-12 09:01:57.551486155 +0200
@@ -33,6 +33,8 @@
 
 #include "core.h"
 
+# if 0
+
 // MACROS ------------------------------------------------------------------
 
 #define SMALLID				0x22
@@ -518,3 +520,4 @@
 }
 
 #endif
+#endif
diff -Nur orig/libs/core/zone.h mod/libs/core/zone.h
--- orig/libs/core/zone.h	2022-08-12 08:52:23.000000000 +0200
+++ mod/libs/core/zone.h	2022-08-12 09:07:48.678875877 +0200
@@ -27,98 +27,19 @@
 //**
 //**************************************************************************
 
-//#define ZONE_DEBUG		1
-
 void Z_Shutdown();
-
-#ifdef ZONE_DEBUG
-
-void* Z_Malloc(int size, const char* FileName, int LineNumber);
-void* Z_Calloc(int size, const char* FileName, int LineNumber);
-void Z_Free(void* ptr, const char* FileName, int LineNumber);
-
-inline void* operator new(size_t Size, const char* FileName, int LineNumber)
-{
-	return Z_Malloc(Size, FileName, LineNumber);
-}
-
-inline void operator delete(void* Ptr, const char* FileName, int LineNumber)
-{
-	Z_Free(Ptr, FileName, LineNumber);
-}
-
-inline void* operator new[](size_t Size, const char* FileName, int LineNumber)
-{
-	return Z_Malloc(Size, FileName, LineNumber);
-}
-
-inline void operator delete[](void* Ptr, const char* FileName, int LineNumber)
-{
-	Z_Free(Ptr, FileName, LineNumber);
-}
-
-inline void* operator new(size_t Size)
-{
-	return Z_Malloc(Size, "", 0);
-}
-
-inline void operator delete(void* Ptr)
-{
-	Z_Free(Ptr, "", 0);
-}
-
-inline void* operator new[](size_t Size)
-{
-	return Z_Malloc(Size, "", 0);
-}
-
-inline void operator delete[](void* Ptr)
-{
-	Z_Free(Ptr, "", 0);
-}
-
-#define Z_Malloc(size)				Z_Malloc(size, __FILE__, __LINE__)
-#define Z_Calloc(size)				Z_Calloc(size, __FILE__, __LINE__)
-#define Z_Free(ptr)					Z_Free(ptr, __FILE__, __LINE__)
-
-#define ZONE_DEBUG_NEW				new(__FILE__, __LINE__)
-#undef new
-#define new							ZONE_DEBUG_NEW
-
-#else
-
-void* Z_Malloc(int size);
-void* Z_Calloc(int size);
-void Z_Free(void* ptr);
-
-inline void* operator new(size_t Size)
+static inline void* Z_Malloc(int size)
 {
-	return Z_Malloc(int(Size));
+  return static_cast<void *>(operator new(size));
 }
 
-inline void operator delete(void* Ptr)
+static inline void* Z_Calloc(int size)
 {
-	Z_Free(Ptr);
+  return memset(Z_Malloc(size), 0, size);
 }
 
-inline void operator delete(void* Ptr, size_t)
+static inline void Z_Free(void* ptr)
 {
-	Z_Free(Ptr);
+  char *p = (char *)ptr;
+  delete p;
 }
-
-inline void* operator new[](size_t Size)
-{
-	return Z_Malloc(int(Size));
-}
-
-inline void operator delete[](void* Ptr)
-{
-	Z_Free(Ptr);
-}
-
-inline void operator delete[](void* Ptr, size_t)
-{
-	Z_Free(Ptr);
-}
-
-#endif
